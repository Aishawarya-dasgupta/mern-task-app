step 1: npm init -y
step 2. nom i express

Always start with backend during making a project

step 3: git init in the terminal 
step 4: in the mern-task-app folder make a .gitignore file and then inside it write /node_modules
this will ignore the node_module folder from uploading it in the git

To run the program we need to write npm run backend 
--------------------------------------------------------------------------------------------------------------------------------

 console.log(`server is listening on port ${PORT}`);
 this can also be written as 
 console.log("listeningon port." + PORT.toString())
 --------------------------------------------------------------------------------------------------------------------------------

 "scripts": {
    "start": "node backend/server.js",  // this will help our application to run elsewhereif that system does not have nodemon
    "backend": "nodemon backend/server.js" // this will help our application to run on our system using nodemon
  },

--------------------------------------------------------------------------------------------------------------------------------

  URI = uniform resourse identifier

  --------------------------------------------------------------------------------------------------------------------------------

  async because then the site wont hang as async function will be executing in the background (if the executing is not yet completed and user wants to do something else) then the next function will be executed and the previous function will be completed in the background
  whenerver we are using remote application/resource (can be db server, api etc) then we need to use async and await because we dont know if the resource will be provided to us at once so we need to wait for a while 


const startServer = async() => {
    try{
        await connectDB()
        app.listen(PORT,(req,res) =>{
            console.log(`server is listening on port ${PORT}`);
        })
    }catch(error){
        console.log(error)
    }
}

we did this because initially the server was starting first and then the mongodb was getting connected later on which might result to some error. In the startServer function we are using await and async so that unless the db is getting connected, the server will not listen.
As initially there was no await or aysnc due to will the server was getting started earlier then mongodb because mongodb needs some time to connect and in that time the server used to start 
----------------------------------------------------------------------------------------------------------------------------------------------------
whenever we want to use a file in another file then at the buttom of the file that is to exported in that we write module.exports
and the file where it is to be used at the beginning of that file we write the require statement 
----------------------------------------------------------------------------------------------------------------------------------------------------

if we are using method 2 to connect db and starting the server then do we need the connectDB.js file? -- No we do not need the connectdB file

----------------------------------------------------------------------------------------------------------------------------------------------------
what is a part of crud operation?
what is a middleware?

----------------------------------------------------------------------------------------------------------------------------------------------------
yarn and npm is a package manager. but yarn is generally used in mac ios but we can even use it in windows but we need to install it unlike npm which comes with node

----------------------------------------------------------------------------------------------------------------------------------------------------
const dotevn = require('dotenv').config();? -> we are not doing it the general way because here we are importing .env file and not js file. Also if we are importing the dotenv file once in server.js file we can uise it everywhere in the application 


module.exports = connectDB // here do we need to export the function or the whole file? -> function is exported but the function and the file name are similar to aviod confusion...if there are more than one function than we can write it inside curlybbracket and commas

----------------------------------------------------------------------------------------------------------------------------------------

// const logger = async (req,res,next) => {
//     console.log("Middleware ran")
//     console.log(req.method)
//     next();
// }

Can we access the next() here? 